{% extends 'base.html.twig' %}

{% block title %}Crypto - cours{% endblock %}
{% block body %}
<script src={{ asset('js/chart.js') }}></script>
<style>
    /* Spinner de chargement */
    .loader {
        border: 4px solid #f3f3f3;
        border-top: 4px solid #3498db;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        animation: spin 2s linear infinite;
        display: none; /* Cacher le loader par défaut */
        margin: 20px auto;
    }

    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
</style>
<main class="flex flex-wrap justify-center items-start px-4 flex-grow mt-20 gap-8 container mx-auto mb-10">
    <div class="bg-gray-800 dark:bg-gray-300 p-6 rounded-lg shadow-lg w-full max-w-10xl">
        <h2 id="cryptoTitle" class="text-2xl font-semibold text-center text-white dark:text-black">Cryptos</h2>
        <div id="cryptoLoader" class="loader"></div>
        <div id="resultats" class="mt-4"></div>
    </div>

{% if error is defined %}
    <script>
        Swal.fire({
        icon: "error",
        title: "Oops...",
        text: "{{ error|raw }}"
        });
    </script>
{% endif %}
</main>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const cryptoLoader = document.getElementById("cryptoLoader");
        const resultDiv = document.getElementById("resultats");
        // Affichage du loader pendant la récupération des cryptos
        function fetchCryptoData() {
            fetch('/cryptos')
                .then(response => response.json())
                .then(data => {
                    cryptoLoader.style.display = 'none';  // Cacher le loader une fois les cryptos récupérés
                    resultDiv.innerHTML = "";
                    if (!data.cryptos || data.cryptos.length === 0) {
                        const option  = document.createElement('option');
                        option.textContent = 'Pas de cryptos';
                        option.disabled = true;
                        cryptoSelect.appendChild(option);
                        return;
                    }

                    // Création du tableau
                    const table = document.createElement("table");
                    table.classList.add('w-full', 'border-collapse', 'border', 'border-gray-300', 'dark:border-gray-500');

                    // Création de l'en-tête du tableau
                    const thead = document.createElement("thead");
                    const tr = document.createElement("tr");
                    tr.classList.add('bg-gray-800', 'text-white', 'dark:bg-gray-300', 'dark:text-black');
                    const th1 = document.createElement("th");
                    th1.classList.add('border', 'border-gray-300', 'dark:border-gray-500', 'p-2');
                    th1.textContent = "ID Crypto";
                    const th2 = document.createElement("th");
                    th2.classList.add('border', 'border-gray-300', 'dark:border-gray-500', 'p-2');
                    th2.textContent = "Nom Crypto";
                    const th3 = document.createElement("th");
                    th3.classList.add('border', 'border-gray-300', 'dark:border-gray-500', 'p-2');
                    th3.textContent = "Valeur (USD)";

                    tr.appendChild(th1);
                    tr.appendChild(th2);
                    tr.appendChild(th3);
                    thead.appendChild(tr);
                    table.appendChild(thead);

                    // Création du corps du tableau avec les données
                    const tbody = document.createElement("tbody");

                    data.cryptos.forEach((crypto) => {
                        const tr = document.createElement("tr");
                        // Alternance de couleur des lignes
                        tr.classList.add('bg-gray-800', 'text-white', 'dark:bg-gray-300', 'dark:text-black');
                        
                        const td1 = document.createElement("td");
                        td1.classList.add('px-4', 'py-2', 'border', 'border-gray-300', 'dark:border-gray-500');
                        td1.textContent = crypto.idCrypto;
                        const td2 = document.createElement("td");
                        td2.classList.add('px-4', 'py-2', 'border', 'border-gray-300', 'dark:border-gray-500');
                        td2.textContent = crypto.intitule;
                        const td3 = document.createElement("td");
                        td3.classList.add('px-4', 'py-2', 'border', 'border-gray-300', 'dark:border-gray-500');
                        td3.textContent = crypto.currentValeur;
                        
                        tr.appendChild(td1);
                        tr.appendChild(td2);
                        tr.appendChild(td3);
                        tbody.appendChild(tr);
                    });

                    table.appendChild(tbody);
                    resultDiv.appendChild(table);
                })
                .catch(error => {
                    console.error("Erreur lors de la récupération des cryptos :", error);
                    cryptoLoader.style.display = 'none';  // Cacher le loader en cas d'erreur
                });
        }
        cryptoLoader.style.display = 'block'; 
        fetchCryptoData();
        setInterval(() => fetchCryptoData(), 10000);
    });
</script>
{% endblock %}